@model ImageOptimization.ViewModels.SourceImageViewModel

@{
    ViewBag.Title = "Details";
}

<img class="img img-detail" src="@Model.FallbackPath" srcset="@Model.Sizes" alt="@Model.AltText" width="@Model.Width" height="@Model.Height"/>

<div class="well">
  <h4>@Model.FileName</h4>
  <hr />

  <ul>
    <li><b>Format:</b> <span data-id="@Model.ID">@Model.FileFormat</span> </li>
    <li><b>Width:</b> <span data-id="@Model.ID">@Model.Width </span></li>
    <li><b>Height:</b> <span data-id="@Model.ID">@Model.Height </span></li>
    <li><b>File size:</b> @Model.HumanSize (<span data-id="@Model.ID">@Model.FileSize</span> Bytes)</li>
    <li><b>Load time:</b> <span class="load-time" data-name="@Model.FileName"></span> ms</li>
  </ul>

  <p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.ID })
  </p>

  <hr />
  <h4>Optimize #1: Resize</h4>
  @if (Model.FileFormat != "SVG")
  {
      <ol class="list">
      @foreach (var thumbnail in Model.Thumbnails)
      {
        <li>
          <b>Format:</b> @thumbnail.Format <br />
          <b>Name:</b> @thumbnail.FileName,<br />
          <b>Quality:</b> @thumbnail.Quality <br />
          <b>Dimensions:</b> @thumbnail.Width x @thumbnail.Height, <br />
          <b>File size:</b> @thumbnail.getFileSize() (<span data-id="@thumbnail.ID">@thumbnail.FileSize</span> Bytes) <br />
          <b>Load time:</b> <span class="load-time" data-name="@thumbnail.FileName"></span> ms <br />
          <div class="overflow-container">
            <img src="@thumbnail.RelativePath" alt="@thumbnail.AltText">
          </div>
        </li>
      }
      </ol>
  }
  else
  {
      <p>This is already the best format for resizing :)</p>
  }

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #2: Format change</h4>

  @if (Model.FileFormat != "SVG")
  {
  <ul class="list">
    @foreach (var format in Model.Formats)
    {
    <li>
      <b>Format:</b> @format.Format <br />
      <b>Name:</b> @format.FileName,<br />
      <b>Quality:</b> @format.Quality <br />
      <b>Dimensions:</b> @format.Width x @format.Height, <br />
      <b>File size:</b> @format.getFileSize() (<span data-id="@format.ID">@format.FileSize</span> Bytes) <br />
      <b>Load time:</b> <span class="load-time" data-name="@format.FileName"></span> ms <br />
      <img class="img" src="@format.RelativePath" alt="@format.AltText">
    </li>
    }
  </ul>
  }
  else
  {
  <p>Converting from SVG to anything else doesnt really make sense. It is possible thought, since the process of painting vector graphics to the screen involves rasterization. Therefore you can generate JPEG's from SVG like a boss 😎</p>
  <p>If you really want to convert here you go @Html.ActionLink("JPEG Image", "FormatTest", new { id = Model.ID, format = 4})</p>
  }

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #3: Compress Images, Quality:75</h4>
  @if(Model.FileFormat != "SVG")
  {
  <ul class="list">
    @foreach (var compress in Model.Compression)
    {
    <li>
      <b>Format:</b> @compress.Format <br />
      <b>Name:</b> @compress.FileName,<br />
      <b>Quality:</b> @compress.Quality <br />
      <b>Dimensions:</b> @compress.Width x @compress.Height, <br />
      <b>File size:</b> @compress.getFileSize() (@compress.FileSize Bytes) <br />
      <b>Load time:</b> <span class="load-time" data-name="@compress.FileName"></span> ms <br />
      <div class="overflow-container">
        <img src="@compress.RelativePath" alt="@compress.AltText">
      </div>
    </li>
    }
  </ul>
  }
  else
  {
      <p>
        <b>File name:</b> <span data-id="@Model.ID"> @Model.Thumbnails.First().FileName </span><br />
        <b>File size:</b> @Model.Thumbnails.First().getFileSize() kB, (<span data-id="@Model.ID">@Model.Thumbnails.First().FileSize</span> Bytes)<br />
        <b>Load time:</b> <span class="load-time" data-name="@Model.Thumbnails.First().FileName"></span> ms <br />
        <img class="img" alt="@Model.AltText" src="@Model.Thumbnails.First().RelativePath" />
      </p>
  }

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #4: Delete Metadata</h4>

  @if (Model.FileFormat != "SVG")
  {
  <ul class="list">
    @foreach (var metadata in Model.Metadata)
    {
    <li>
      <b>Format:</b> @metadata.Format <br />
      <b>Name:</b> @metadata.FileName,<br />
      <b>Quality:</b> @metadata.Quality <br />
      <b>Dimensions:</b> @metadata.Width x @metadata.Height, <br />
      <b>File size:</b> @metadata.getFileSize() (@metadata.FileSize Bytes) <br />
      <b>Load time:</b> <span class="load-time" data-name="@metadata.FileName"></span> ms <br />
      <div class="overflow-container">
        <img class="img" src="@metadata.RelativePath" alt="@metadata.AltText">
      </div>
    </li>
    }
  </ul>
  }
  else
  {
    <a href="/Image/FormatTest/@Model.ID?format=6&strip=true">SVG Format</a>
  }

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #5: Send new format images</h4>
  @if(Model.FileFormat != "SVG")
  {
      <p>If you see the image below, your client supports webp</p>
      <div class="overflow-container">
        @*<img src="@Url.Action("FormatTest", "Image", new { id = Model.ID, format = 5, strip = true})" alt="@Model.AltText" />*@
      </div>
  }
  else
  {
      <p>Same as above, not really usefull converting to WebP</p>
  }
</div>
