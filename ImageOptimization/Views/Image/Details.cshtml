@model ImageOptimization.ViewModels.SourceImageViewModel

@{
    ViewBag.Title = "Details";
}

@*<img class="img img-detail" src="@Model.FallbackPath" srcset="@Model.Sizes" alt="@Model.AltText" width="@Model.Width" height="@Model.Height"/>*@

<div class="well">
  <h4>@Model.FileName</h4>
  <hr />

  <ul>
    <li><b>Format:</b> <span data-id="@Model.ID">@Model.FileFormat</span> </li>
    <li><b>Width:</b> <span data-id="@Model.ID">@Model.Width </span></li>
    <li><b>Height:</b> <span data-id="@Model.ID">@Model.Height </span></li>
    <li><b>File size:</b> @Model.HumanSize (<span data-id="@Model.ID">@Model.FileSize</span> Bytes)</li>
  </ul>

  <p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.ID })
  </p>

  <hr />
  <h4>Optimize #1: Resize</h4>
  <div class="optimize">

  @if (Model.FileFormat != "SVG")
  {
      <ol class="list">
      @foreach (var thumbnail in Model.Thumbnails)
      {
        <li>
          <b>Format:</b> @thumbnail.Format <br />
          <b>Name:</b> <span class="file-name">@thumbnail.FileName</span>,<br />
          <b>Dimensions:</b> @thumbnail.Width x @thumbnail.Height, <br />
          <b>File size:</b> @thumbnail.getFileSize() (<span class="file-size" data-name="@thumbnail.FileName">@thumbnail.FileSize</span> Bytes) <br />
          <b>Load time:</b> <span class="load-time" data-name="@thumbnail.FileName"></span> ms <br />
          <div class="overflow-container">
            <img src="@thumbnail.RelativePath" alt="@thumbnail.AltText">
          </div>
        </li>
      }
      </ol>
  }
  else
  {
      <p>This is already the best format for resizing :)</p>
      <p>
        <b>File name:</b> <span data-id="@Model.ID"> @Model.FileName </span><br />
        <b>File size:</b> @Model.HumanSize kB, (<span data-id="@Model.ID">@Model.FileSize</span> Bytes)<br />
        <b>Load time:</b> <span class="load-time" data-name="@Model.FileName"></span> ms <br />
        <img class="img" alt="@Model.AltText" src="@Model.FallbackPath" />
      </p>
  }
  </div>

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #2: Format change</h4>

  <div class="format-change">
  @if (Model.FileFormat != "SVG")
  {
    <ul class="list">
      @foreach (var format in Model.Formats)
      {
      <li>
        <b>SSIM:</b> <span class="ssim" data-name="@format.Image1.FileName">@format.SSIM</span> <br />
        <b>Format:</b> @format.Image1.Format -> @format.Image2.Format<br />

        <b>Name:</b> <span class="file-name file-one"> @format.Image1.FileName</span>,<br />
        <b>File size:</b> @format.Image1.getFileSize() (<span class="file-size file-one" data-name="@format.Image1.FileName">@format.Image1.FileSize</span> Bytes) <br />
        <b>Load time:</b> <span class="load-time file-one" data-name="@format.Image1.FileName"></span> ms <br />
        <div class="overflow-container">
          <img class="img" src="@format.Image1.RelativePath" alt="@format.Image1.AltText">
        </div>

        <b>Name:</b> <span class="file-name file-two">@format.Image2.FileName</span>,<br />
        <b>File size:</b> @format.Image2.getFileSize() (<span class="file-size file-two" data-name="@format.Image2.FileName">@format.Image2.FileSize</span> Bytes) <br />
        <b>Load time:</b> <span class="load-time file-two" data-name="@format.Image2.FileName"></span> ms <br />
        <div class="overflow-container">
          <img class="img" src="@format.Image2.RelativePath" alt="@format.Image2.AltText">
        </div>
      </li>
      }
    </ul>
  }
  else
  {
  <p>Converting from SVG to anything else doesnt really make sense. It is possible thought, since the process of painting vector graphics to the screen involves rasterization. Therefore you can generate JPEG's from SVG like a boss 😎</p>
  <p>If you really want to convert here you go @Html.ActionLink("JPEG Image", "FormatTest", new { id = Model.ID, format = 4})</p>
  }
  </div>

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #3: Compress Images, Quality:75</h4>

  <div class="compress">

  @if(Model.FileFormat != "SVG")
  {
  <ul class="list">
    @foreach (var compress in Model.Compression)
    {
    <li>
      <b>Format:</b> @compress.Image1.Format <br />
      <b>Name:</b> <span class="file-name file-one">@compress.Image1.FileName</span>,<br />
      <b>Name:</b> <span class="file-name file-two">@compress.Image2.FileName</span>,<br />
      <b>Quality:</b> @compress.Image1.Quality -> @compress.Image2.Quality <br />
      <b>SSIM:</b> <span class="ssim" data-name="@compress.Image1.FileName">@compress.SSIM</span> <br />
      <b>File size:</b> @compress.Image1.getFileSize() (<span class="file-size file-one" data-name="@compress.Image1.FileName">@compress.Image1.FileSize</span> Bytes) <br />
      <b>File size:</b> @compress.Image2.getFileSize() (<span class="file-size file-two" data-name="@compress.Image2.FileName">@compress.Image2.FileSize</span> Bytes) <br />
      <b>Load time:</b> <span class="load-time file-one" data-name="@compress.Image1.FileName"></span> ms <br />
      <b>Load time:</b> <span class="load-time file-two" data-name="@compress.Image2.FileName"></span> ms <br />
      <div class="overflow-container">
        <img src="@compress.Image1.RelativePath" alt="@compress.Image1.AltText">
      </div>
      <div class="overflow-container">
        <img src="@compress.Image2.RelativePath" alt="@compress.Image2.AltText">
      </div>
    </li>
    }
  </ul>
  }
  else
  {
      <p>
        <b>File name:</b> <span data-id="@Model.ID"> @Model.Thumbnails.First().FileName </span><br />
        <b>File size:</b> @Model.Thumbnails.First().getFileSize() kB, (<span data-id="@Model.ID">@Model.Thumbnails.First().FileSize</span> Bytes)<br />
        <b>Load time:</b> <span class="load-time" data-name="@Model.Thumbnails.First().FileName"></span> ms <br />
        <img class="img" alt="@Model.AltText" src="@Model.Thumbnails.First().RelativePath" />
      </p>
  }
  </div>

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #4: Delete Metadata</h4>

  <div class="metadata">

  @if (Model.FileFormat != "SVG")
  {
  <ul class="list">
    @foreach (var metadata in Model.Metadata)
    {
    <li>
      <b>Format:</b> @metadata.Format <br />
      <b>Name:</b> <span class="file-name">@metadata.FileName</span>,<br />
      <b>File size:</b> @metadata.getFileSize() (<span class="file-size" data-name="@metadata.FileName">@metadata.FileSize</span> Bytes)<br />
      <b>Load time:</b> <span class="load-time" data-name="@metadata.FileName"></span> ms <br />
      <div class="overflow-container">
        <img class="img" src="@metadata.RelativePath" alt="@metadata.AltText">
      </div>
    </li>
    }
  </ul>
  }
  else
  {
    <a href="/Image/FormatTest/@Model.ID?format=6&strip=true">SVG Format</a>
  }
  </div>

  <hr class="margin-bottom-10em"/>
  <h4>Optimize #5: Send new format images</h4>
  @if(Model.FileFormat != "SVG")
  {
      <p>If you see the image below, your client supports webp</p>
      <div class="overflow-container">
        @*<img src="@Url.Action("FormatTest", "Image", new { id = Model.ID, format = 5, strip = true})" alt="@Model.AltText" />*@
      </div>
  }
  else
  {
      <p>Same as above, not really usefull converting to WebP</p>
  }
</div>
